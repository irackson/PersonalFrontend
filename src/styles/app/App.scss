@use "sass:math";

:root {
    --input-border: orange;
    --input-focus-h: 245;
    --input-focus-s: 100%;
    --input-focus-l: 42%;
}

//* ___      __   __   __   __        __
//*  |  \ / |__) /  \ / _` |__)  /\  |__) |__| \ /
//*  |   |  |    \__/ \__> |  \ /~~\ |    |  |  |

@import url('https://fonts.googleapis.com/css2?family=Fraunces:wght@900&display=swap');

/// Regular font family
/// @type List
$text-font-stack: 'Fraunces 9pt Soft', 'Helvetica Neue Light', 'Helvetica Neue',
    'Helvetica', 'Arial', sans-serif !default;

/// Code (monospace) font family
/// @type List
$code-font-stack: 'Courier New', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono',
    'Monaco', monospace !default;

// Select a ratio to preview
// Default is "perfectFourth"
$type-ratios: (
    'minorSecond': 1.067,
    'majorSecond': 1.125,
    'minorThird': 1.2,
    'majorThird': 1.25,
    'perfectFourth': 1.333,
    'augmentedFourth': 1.414,
    'perfectFifth': 1.5,
    'goldenRatio': 1.618,
);

@function type-ratio($key) {
    @return map-get($type-ratios, $key);
}

// Recommended
$type-base-size: 1rem;

// Select by key of map, or use a custom value
$type-size-ratio: type-ratio('perfectFourth');

// List in descending order to prevent extra sort function
// Limited to high-touch heading styles
$type-levels: 4, 3, 2, 1;

// Create map with h[x] as key
// and computed font-size as value
$type-styles: ();
$level-size: $type-base-size;
@each $level in $type-levels {
    $level-size: $level-size * $type-size-ratio;
    $type-styles: map-merge($type-styles, (#{'h'}$level: $level-size));

    // Output heading styles
    // Assign to element and create utility class
    h#{$level},
    .h#{$level} {
        // Fallback for browsers that don't support min / max
        font-size: $level-size;

        // Recommendation courtesy of this brilliant work:
        // @link https://hugogiraudel.com/2020/05/18/using-calc-to-figure-out-optimal-line-height/
        line-height: calc(2px + 2ex + 2px);

        // Set with `em` to be relative to current `font-size`
        margin-bottom: 0.65em;

        // Limit in place based on testing -> smaller ratios are
        // prematurely or unnecessarily reduced
        @if ($type-size-ratio > 1.2) {
            // Fluid type styles

            // As of May 2020, min / max has better support than clamp
            // particularly for mobile devices

            // `unquote` is required due to built-in Sass min/max functions
            // incorrectly assuming intent

            // Remove unit for calculations
            $level-unitless: math.div($level-size, $level-size * 0 + 1);

            // Set minimum size to a percentage less than $level-size
            // Reduction is greater for large font sizes (> 4rem) to help
            // prevent overflow due to font-size on mobile devices
            $fluid-reduction: if($level-size > 4, 0.5, 0.33);
            $fluid-min: $level-unitless - ($fluid-reduction * $level-unitless);

            // Prevent dropping lower than 1rem (body font-size)
            $fluid-min: if($fluid-min > $type-base-size, $fluid-min, 1);

            // Adjust max modifier slightly per level to prevent "same" size
            // or lower levels appearing larger than higher levels
            // 4vw was selected by testing from $type-ratios map, YMMV ðŸ™ƒ
            $fluid-scaler: ($level-unitless - $fluid-min) + 4vw;

            font-size: unquote(
                'min(max(#{$fluid-min}rem, #{$fluid-scaler}), #{$level-size})'
            );
        }
    }
}

@function type-style($key) {
    @return map-get($type-styles, $key);
}

// Test retrieving heading style value from the map
// @debug 'h3:'#{type-style(h3)};

p,
li,
h1,
h2,
h3,
h4 {
    // Help prevent overflow of long words/names/URLs
    word-break: break-word;

    // Optional, not supported for all languages:
    hyphens: auto;

    // Clear top margin
    margin-top: 0;
}

body {
    // Ensure base applied as default for all other elements
    font-size: $type-base-size;
    // line-height: 1.25;
    font-family: $text-font-stack;
}

input {
    width: 310px;
}

.social__list {
    list-style: none;
    display: flex;
    column-gap: 1rem;
    justify-content: center;
    padding-left: 0;
    padding-right: 0;
}

.business__container {
    width: 300px;
    height: 525px;
    margin-left: auto;
    margin-right: auto;
    background-image: url('https://storage.jukeboxprint.com/s/images/stocks/cream-cotton-stock.jpg');
    text-align: center;
    border-radius: 4px;
    margin-top: 1rem;
}

.front__container {
    width: 300px;
    height: 525px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    button {
        margin-bottom: 1rem;
        white-space: nowrap;
        min-width: fit-content;
        width: 12ch;
    }
}
.back {
    width: 300px;
    height: 525px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;

    &__text-container {
        padding-top: 1rem;
        font-weight: bold;
        a {
            color: currentColor;
        }
    }

    button {
        margin-bottom: 1rem;
        white-space: nowrap;
        min-width: fit-content;
        width: 12ch;
    }
}

.slider-container {
    margin: auto;
    // margin-top: 50px;
    margin-top: 210px;
    margin-bottom: 200px;
    width: 86vw;
    height: 40vh;
}

.slider {
    // padding: 0px 40px 40px 40px;
    width: 100%;
    // height: 100%;
    // background: #5f9ea0;
    // color: #fff;
    // font-size: 36px;
    // line-height: 100px;
    // margin: 10px;
    // padding: 2%;
    position: relative;
    text-align: center;
}
.slick-next:before,
.slick-prev:before {
    color: #000;
}

.wakatime {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding-top: clamp(15px, 60px, 4rem);
    padding-bottom: clamp(8px, 30px, 2rem);
    gap: 4rem;
    flex-wrap: nowrap;
    // overflow-x: hidden;
    figure {
        margin-top: -20px;
        margin-bottom: -20px;
        // padding-left: -100px;
        // padding-left: clamp(15px, 20px, 2rem);
        // padding-right: clamp(15px, 20px, 2rem);
        @media (max-width: 769px) {
            margin-top: -100px;
            margin-bottom: -100px;
        }
    }
}

.calendar {
    padding: 1rem;
    font-size: clamp(1rem, 5vw, 2rem);
}

.home {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(1, 1fr);
    text-align: center;
    align-content: center;
    justify-content: center;
    margin-top: 6%;

    .featured-project {
        grid-column-start: 1;
        grid-column-end: 2;
        grid-row-start: 1;
        grid-row-end: 2;
        width: 30ch;
        margin: auto;
    }

    .business-card {
        grid-column-start: 2;
        grid-column-end: 3;
        grid-row-start: 1;
        grid-row-end: 2;
    }

    .featured-blog {
        grid-column-start: 3;
        grid-column-end: 4;
        grid-row-start: 1;
        grid-row-end: 2;
        width: 30ch;
        margin: auto;
    }

    @media (max-width: 926px) {
        grid-template-columns: repeat(1, 1fr);
        grid-template-rows: repeat(3, 1fr);
        .featured-project {
            grid-column-start: 1;
            grid-column-end: 2;
            grid-row-start: 2;
            grid-row-end: 3;
            margin-bottom: -20px;
        }

        .business-card {
            grid-column-start: 1;
            grid-column-end: 2;
            grid-row-start: 1;
            grid-row-end: 2;
        }

        .featured-blog {
            grid-column-start: 1;
            grid-column-end: 2;
            grid-row-start: 3;
            grid-row-end: 4;
        }
    }
}

.subscribe-container {
    width: 100vw;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;

    .subscribe-checkboxes {
        display: flex;
        justify-content: space-around;
        align-items: center;
        padding: 1rem;
    }
}

input {
    border: 1px solid white;
    -webkit-box-shadow: inset 0 0 8px rgba(0, 0, 0, 0.1),
        0 0 16px rgba(0, 0, 0, 0.1);
    -moz-box-shadow: inset 0 0 8px rgba(0, 0, 0, 0.1),
        0 0 16px rgba(0, 0, 0, 0.1);
    box-shadow: inset 0 0 8px rgba(0, 0, 0, 0.1), 0 0 16px rgba(0, 0, 0, 0.1);
    padding: 0.25rem;
    background: rgba(255, 255, 255, 0.5);
    margin: 0 0 10px 0;
}

input[type='checkbox'] {
    margin: -1px 0px 0 10px;
    vertical-align: middle;
    cursor: pointer;
    width: 20px;
    height: 20px;
}

input[type='text'] {
    text-align: center;
}
input[type='email'] {
    text-align: center;
}

//=== Drawing effect

@mixin btn-border-drawing(
    $color: #ccc,
    $hover: black,
    $width: 2px,
    $vertical: top,
    $horizontal: left,
    $duration: 0.25s
) {
    box-shadow: inset 0 0 0 $width $color;
    color: $color;
    transition: color $duration math.div($duration, 3);
    position: relative;

    &::before,
    &::after {
        border: 0 solid transparent;
        box-sizing: border-box;
        content: '';
        pointer-events: none;
        position: absolute;
        width: 0;
        height: 0;

        #{$vertical}: 0;
        #{$horizontal}: 0;
    }

    &::before {
        $h-side: if($horizontal == 'left', 'right', 'left');

        border-#{$vertical}-width: $width;
        border-#{$h-side}-width: $width;
    }

    &::after {
        $v-side: if($vertical == 'top', 'bottom', 'top');

        border-#{$v-side}-width: $width;
        border-#{$horizontal}-width: $width;
    }

    &:hover {
        color: $hover;

        &::before,
        &::after {
            border-color: $hover;
            transition: border-color 0s, width $duration, height $duration;
            width: 100%;
            height: 100%;
        }

        &::before {
            transition-delay: 0s, 0s, $duration;
        }

        &::after {
            transition-delay: 0s, $duration, 0s;
        }
    }
}

.draw-border {
    @include btn-border-drawing(#51b2d8, #341b63, 2px, bottom, right);
}

.btn {
    cursor: pointer;
    letter-spacing: 0.05rem;
    border: 0px solid white;
}
//=== End Button styling

.article {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    @media (min-width: 769px) {
        max-width: 80vw !important;
        margin: 0 auto;
        margin-top: 2rem;
    }

    @media (max-width: 769px) {
        padding-top: 60px;
        flex-wrap: wrap;

        > * {
            padding-right: 4px;
            width: 100vw !important;
        }
        img {
            max-width: 70vw !important;
        }
    }

    &__container {
        max-width: 80ch;
    }

    &__heading {
        text-align: center;
        padding-bottom: 3rem;

        padding-left: 0.5rem;
        padding-right: 1rem;
        hyphens: none !important;
        .article__description {
            font-style: italic;
        }
    }

    &__dates {
        text-align: center;
    }

    &__links {
        margin-top: 0.5rem;

        display: flex;
        flex-direction: column;
        align-items: center;
        p {
            margin-top: 2rem;
            line-height: 0.2;
            font-size: 1.5rem;
        }
        img {
            width: clamp(300px, 30vw, 800px);
            margin: 0 auto;
        }
    }

    &__markdown-container {
        margin-top: 4rem;
    }
}

.about {
    &__resume-container {
        // border: 1px solid black;
        width: min(800px, 80%);
        padding-top: 3rem;
        display: flex;
        justify-items: left;
        a {
            color: currentColor;
        }

        #container {
            margin: 0%;
        }

        #circle {
            position: relative;
            width: 100%;
            // padding-bottom: 100%;
            overflow: hidden;
        }

        #circle text {
            font-family: 'Helvetica Neue', Arial;
            font-size: 3.5rem;
            font-weight: bold;
            user-select: none;
            text-decoration: overline;
        }

        #circle svg {
            width: 100%;
            height: 60px;

            -webkit-animation-name: rotate;
            -moz-animation-name: rotate;
            -ms-animation-name: rotate;
            -o-animation-name: rotate;
            animation-name: rotate;
            -webkit-animation-duration: 5s;
            -moz-animation-duration: 5s;
            -ms-animation-duration: 5s;
            -o-animation-duration: 5s;
            animation-duration: 5s;
            -webkit-animation-iteration-count: infinite;
            -moz-animation-iteration-count: infinite;
            -ms-animation-iteration-count: infinite;
            -o-animation-iteration-count: infinite;
            animation-iteration-count: infinite;
            -webkit-animation-timing-function: linear;
            -moz-animation-timing-function: linear;
            -ms-animation-timing-function: linear;
            -o-animation-timing-function: linear;
            animation-timing-function: linear;
        }

        @-webkit-keyframes rotate {
            from {
                -webkit-transform: rotate(360deg);
            }
            to {
                -webkit-transform: rotate(0);
            }
        }
        @-moz-keyframes rotate {
            from {
                -moz-transform: rotate(360deg);
            }
            to {
                -moz-transform: rotate(0);
            }
        }
        @-ms-keyframes rotate {
            from {
                -ms-transform: rotate(360deg);
            }
            to {
                -ms-transform: rotate(0);
            }
        }
        @-o-keyframes rotate {
            from {
                -o-transform: rotate(360deg);
            }
            to {
                -o-transform: rotate(0);
            }
        }
        @keyframes rotate {
            from {
                transform: rotate(360deg);
            }
            to {
                transform: rotate(0);
            }
        }
    }
}
