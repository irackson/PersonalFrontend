:root {
    --input-border: orange;
    --input-focus-h: 245;
    --input-focus-s: 100%;
    --input-focus-l: 42%;
}

//* ___      __   __   __   __        __
//*  |  \ / |__) /  \ / _` |__)  /\  |__) |__| \ /
//*  |   |  |    \__/ \__> |  \ /~~\ |    |  |  |

// body {
//     font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',
//         'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',
//         'Helvetica Neue', sans-serif;
//     -webkit-font-smoothing: antialiased;
//     -moz-osx-font-smoothing: grayscale;
//     text-rendering: optimizeSpeed;
//     line-height: 1.5;
// }

// code {
//     font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
//         monospace;
// }
@import url('https://fonts.googleapis.com/css2?family=Fraunces:wght@900&display=swap');

/// Regular font family
/// @type List
$text-font-stack: 'Fraunces 9pt Soft', 'Helvetica Neue Light', 'Helvetica Neue',
    'Helvetica', 'Arial', sans-serif !default;

/// Code (monospace) font family
/// @type List
$code-font-stack: 'Courier New', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono',
    'Monaco', monospace !default;

// Select a ratio to preview
// Default is "perfectFourth"
$type-ratios: (
    'minorSecond': 1.067,
    'majorSecond': 1.125,
    'minorThird': 1.2,
    'majorThird': 1.25,
    'perfectFourth': 1.333,
    'augmentedFourth': 1.414,
    'perfectFifth': 1.5,
    'goldenRatio': 1.618,
);

@function type-ratio($key) {
    @return map-get($type-ratios, $key);
}

// Recommended
$type-base-size: 1rem;

// Select by key of map, or use a custom value
$type-size-ratio: type-ratio('perfectFourth');

// List in descending order to prevent extra sort function
// Limited to high-touch heading styles
$type-levels: 4, 3, 2, 1;

// Create map with h[x] as key
// and computed font-size as value
$type-styles: ();
$level-size: $type-base-size;
@each $level in $type-levels {
    $level-size: $level-size * $type-size-ratio;
    $type-styles: map-merge($type-styles, (#{'h'}$level: $level-size));

    // Output heading styles
    // Assign to element and create utility class
    h#{$level},
    .h#{$level} {
        // Fallback for browsers that don't support min / max
        font-size: $level-size;

        // Recommendation courtesy of this brilliant work:
        // @link https://hugogiraudel.com/2020/05/18/using-calc-to-figure-out-optimal-line-height/
        line-height: calc(2px + 2ex + 2px);

        // Set with `em` to be relative to current `font-size`
        margin-bottom: 0.65em;

        // Limit in place based on testing -> smaller ratios are
        // prematurely or unnecessarily reduced
        @if ($type-size-ratio > 1.2) {
            // Fluid type styles

            // As of May 2020, min / max has better support than clamp
            // particularly for mobile devices

            // `unquote` is required due to built-in Sass min/max functions
            // incorrectly assuming intent

            // Remove unit for calculations
            $level-unitless: $level-size / ($level-size * 0 + 1);

            // Set minimum size to a percentage less than $level-size
            // Reduction is greater for large font sizes (> 4rem) to help
            // prevent overflow due to font-size on mobile devices
            $fluid-reduction: if($level-size > 4, 0.5, 0.33);
            $fluid-min: $level-unitless - ($fluid-reduction * $level-unitless);

            // Prevent dropping lower than 1rem (body font-size)
            $fluid-min: if($fluid-min > $type-base-size, $fluid-min, 1);

            // Adjust max modifier slightly per level to prevent "same" size
            // or lower levels appearing larger than higher levels
            // 4vw was selected by testing from $type-ratios map, YMMV ðŸ™ƒ
            $fluid-scaler: ($level-unitless - $fluid-min) + 4vw;

            font-size: unquote(
                'min(max(#{$fluid-min}rem, #{$fluid-scaler}), #{$level-size})'
            );
        }
    }
}

@function type-style($key) {
    @return map-get($type-styles, $key);
}

// Test retrieving heading style value from the map
// @debug 'h3:'#{type-style(h3)};

p,
li,
h1,
h2,
h3,
h4 {
    // Help prevent overflow of long words/names/URLs
    word-break: break-word;

    // Optional, not supported for all languages:
    hyphens: auto;

    // Clear top margin
    margin-top: 0;
}

body {
    // Ensure base applied as default for all other elements
    font-size: $type-base-size;
    // line-height: 1.25;
    font-family: $text-font-stack;
}

header {
    // outline: 1px solid blue !important;
    // width: 100%;
}
main {
    // border: 10px solid green !important;
}

footer {
    outline: 1px solid orange !important;
}

input {
    width: 310px;
}

.social__list {
    list-style: none;
    display: flex;
}

input[type='checkbox'] {
    width: min-content;
}

.business__container {
    width: 300px;
    height: 525px;
    margin-left: auto;
    margin-right: auto;
    background-image: url('https://storage.jukeboxprint.com/s/images/stocks/cream-cotton-stock.jpg');
    text-align: center;
    border-radius: 4px;
    margin-top: 1rem;
}

.front__container {
    width: 300px;
    height: 525px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
    button {
        margin-bottom: 1rem;
    }
}
.back__container {
    width: 300px;
    height: 525px;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;

    aside {
        // margin-top: 1rem;
        font-weight: bolder;
        // line-height: 1.5;
    }

    button {
        margin-bottom: 1rem;
    }
}

.slider-container {
    margin: auto;
    // margin-top: 50px;
    margin-top: 210px;
    margin-bottom: 200px;
    width: 86vw;
    height: 40vh;
}

.slider {
    // padding: 0px 40px 40px 40px;
    width: 100%;
    // height: 100%;
    // background: #5f9ea0;
    // color: #fff;
    // font-size: 36px;
    // line-height: 100px;
    // margin: 10px;
    // padding: 2%;
    position: relative;
    text-align: center;
}
.slick-next:before,
.slick-prev:before {
    color: #000;
}
